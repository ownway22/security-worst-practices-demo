#####################################################################
# 這個檔案專門用來 DEMO GitHub Advanced Security Secret Scanning。   #
# 全部範例都是『無效 / 假資料』，不會對任何真實資源產生風險。       #
# DEMO 完成後請記得刪除或在 PR 中標註這是示範用途。              #
#####################################################################

# ===================== AWS Keys (Fake) =====================
# 常見偵測模式： AWS_ACCESS_KEY_ID / AWS_SECRET_ACCESS_KEY
AWS_ACCESS_KEY_ID=DEMO_AKIA_FAKE_KEY_1234   # Sanitized (打破 AKIA + 16-20 字元格式)
# 格式：40 字元 base64-like (此處為假值) – 已插入 DEMO_ 破壞偵測
AWS_SECRET_ACCESS_KEY=DEMO_wJalrXUtn_FAKE_KEY_SEGMENT_1234567890abcdEFGH12

# 再給一組看起來更像真的 (仍為假)：
AWS_ACCESS_KEY_ID=DEMO_AKIA_ABCDEFGHIJKLMNOP   # Sanitized
AWS_SECRET_ACCESS_KEY=DEMO_abcdEFGH_ijklMNOP_qrstUVWXyz_1234567890abcd   # Sanitized

# ===================== GitHub Personal Access Token (Fake) =====================
# 偵測模式：ghp_ 後接 36 字元 [A-Za-z0-9]
GITHUB_TOKEN=ghp_1234567890abcdefABCDEF1234567890abcd

# ===================== GitHub Fine-grained PAT (Fake) =====================
# 偵測模式：github_pat_ + (字元組) + _ (更多字元)
GITHUB_FINE_GRAINED=github_pat_11AEXAMPLEAbCdEfGhIj_1234567890AbCdEfGhIJ

# ===================== Slack Webhook (Fake) =====================
# 偵測模式：hooks.slack.com/services/
SLACK_WEBHOOK=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

# ===================== Azure Storage / SAS (Fake) =====================
# SAS token 偵測：?sv=...&ss=...&srt=...
AZURE_BLOB_SAS=https://examplestorage.blob.core.windows.net/container/blob.txt?sv=2024-01-01&ss=bfqt&srt=sco&sp=rwlc&se=2099-12-31T23:59:59Z&st=2025-01-01T00:00:00Z&spr=https&sig=FAKEDEMOFAKEDEMOFAKEDEMOFAKEDEMOFAKEDEMO

# ===================== Azure Connection String (Fake) =====================
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=demostorageacct;AccountKey=FAKEBASE64KEYFAKEBASE64KEYFAKEBASE64KEYFAKEBASE64KEY==;EndpointSuffix=core.windows.net

# ===================== Generic Password (Fake) =====================
DB_PASSWORD=SuperSecretPassw0rd! (DEMO ONLY)

# ===================== RSA Private Key Snippet (Fake & Truncated) =====================
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBe8wggXrAgEAAoIBAQDFakeDemoKeyBody
m2FakeDemoKeyBodyx8FakeDemoKeyBodyJ5FakeDemoKeyBody42FakeDemoKeyBod
YfFakeDemoKeyBody==
-----END PRIVATE KEY-----

# ===================== JWT (Fake) =====================
# 典型三段 base64url 結構 (header.payload.signature)
FAKE_JWT=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZW1vLXVzZXIiLCJleHAiOjQ3MjIzNDMyMDB9.DEMO_SIGNATURE_PART_ONLY_FAKE

# ===================== OpenAI Key (Fake) =====================
OPENAI_API_KEY=sk-FAKEDEMOEXAMPLEKEY1234567890abcdEFGH

# ===================== Stripe Key (Fake) =====================
STRIPE_SECRET_KEY=demo_sk_live_51FAKEDEMO_REDACTED_KEY_FRAGMENT   # Sanitized

# ===================== Google API Key (Fake) =====================
GOOGLE_API_KEY=AIzaSyA-DemoFakeKeyStringForScanner1234567

# ===================== 自訂可測試自建規則的假樣式 =====================
# 你可以在 .github/secret-scanning.yml 中加入自訂 regex 來掃描：
DEMO_INTERNAL_TOKEN=INT-DEMO-ABCDEF1234567890XYZ

#####################################################################
# 建議 Demo 流程：
# 1. 在新 branch 加入此檔案並提交 PR。
# 2. 等待 GitHub Secret Scanning / Push 保護觸發 (可能數分鐘)。
# 3. 在 Security > Secret Scanning 檢視 Alerts。
# 4. Demo 結束後：關閉 / 解除 / 刪除檔案或 revert。
#####################################################################
